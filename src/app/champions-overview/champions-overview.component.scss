::ng-deep .mat-mdc-dialog-container {
  border-radius: 4px;
  position: relative;
  //max-width: 90%;
  //background: #fff;
  background: transparent;
  width: 75% !important;
  margin: 2em auto;
  box-shadow: -15px 0 0 0 black, 15px 0 0 0 black, 0 -15px 0 0 black,
    0 15px 0 0 black;
    
}

::ng-deep .mat-mdc-dialog-container {
  //max-height: 300px; /* Set maximum height as needed */
  min-height: 95% !important;
  min-height: 95% !important;
}

.example-card {
  width: calc(33.33% - 20px); /* Adjust the width of each card as needed */
  margin-bottom: 20px;
  width: 10%; /* Set width of cards */
  margin: 10px; /* Add margin between cards */
  flex: 7 0 50px;
  background-color: #4b658496;
}

.card-grid-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 10px;
  overflow-y: auto; 
  max-height: 600px;
  background-color: #4b658496;
  
}


mat-card-content {
  display: flex;
  justify-content: center; /* Horizontally center content */
  align-items: center; /* Vertically center content */
  height: 100%; /* Ensure full height for centering */
}

p {
  font-family: "MyFont";
  font-weight: bold;
  letter-spacing: 1px;
}

///
::-webkit-scrollbar {
  width: 20px;
}

/* Track */
::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px grey; 
  border-radius: 10px;
}
 
/* Handle */
::-webkit-scrollbar-thumb {
  background: #4b658496; 
  border-radius: 10px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #00bfb3; 
}


::ng-deep .icon-outside .mat-dialog-container {
 overflow: unset
}

//Buttonnssss
.icon-buttons {
  position: absolute;
  top: 10px; /* Adjust this value to move the button higher */
  right: 20px;
  font-size: larger;
  color: white;
  font-weight: bolder;
  transform: rotate(180deg);
  background-color: red;
  z-index: 1;
  display: block;
}

.icon-display {
  transform: scale(1.5);
  transform: rotate(180deg);
  font-weight: bolder;
}

///Test
/// 
@mixin transition($prop: all, $time: 1s, $ease: ease-out){
  -webkit-transition : $prop $time $ease;
  -moz-transition    : $prop $time $ease;
  -ms-transition     : $prop $time $ease;
  -o-transition      : $prop $time $ease;
  transition         : $prop $time $ease;
}
@mixin rotate($degrees){
  -webkit-transform : rotate($degrees);
  -moz-transform    : rotate($degrees);
  -ms-transform     : rotate($degrees);
  -o-transform      : rotate($degrees);
  transform         : rotate($degrees);
}

@mixin square( $size ){
  width: $size;
  height: $size;
}

$black : #000;
$white : #fff;

// ---- [ Close Button ] ---- //
.close-button{
  @include square(50px);
  box-shadow : 0px 10 10px 10px rgba( 0, 0, 0, .25 );
  border-radius: 10px; 
  background : $black;
  top: 10px; /* Adjust this value to move the button higher */
  right: 20px;
  margin-right: 10px;
  position   : absolute;
  display    : block;
  z-index    : 200;
  text-indent : -9999px;

  &:before,
  &:after{
    content    : '';
    width      : 55%;
    height     : 2px;
    background : $white;
    position   : absolute;
    top        : 48%;
    left       : 22%;
    @include rotate(-45deg);
    @include transition( $time : 0.3s );
  }

  &:after{
    @include rotate(45deg);
    @include transition( $time : 0.3s );
  }



  &:hover{
    &:before,
    &:after{
      @include rotate(180deg);
    }
  }
}

